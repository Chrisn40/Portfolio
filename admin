<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio Admin Panel | Christopher Nehme</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #121212;
            --secondary: #1a1a1a;
            --accent: #c7a17a;
            --text: #f5f5f5;
            --light-text: #a0a0a0;
            --danger: #e74c3c;
            --success: #2ecc71;
            --spacing: 30px;
            --transition: all 0.3s ease;
            --card-bg: #1e1e1e;
            --sidebar-width: 280px;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: var(--primary);
            color: var(--text);
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
        }
        
        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background-color: var(--secondary);
            height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            padding: 20px 0;
            box-shadow: 5px 0 15px rgba(0, 0, 0, 0.2);
            z-index: 100;
            overflow-y: auto;
        }
        
        .admin-logo {
            text-align: center;
            padding: 20px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 30px;
        }
        
        .admin-logo h2 {
            font-size: 24px;
            font-weight: 600;
            color: var(--accent);
        }
        
        .admin-logo p {
            color: var(--light-text);
            font-size: 14px;
        }
        
        .sidebar-menu {
            list-style: none;
        }
        
        .sidebar-menu li {
            margin-bottom: 5px;
        }
        
        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 15px 30px;
            color: var(--text);
            text-decoration: none;
            transition: var(--transition);
            font-size: 16px;
        }
        
        .sidebar-menu a:hover, .sidebar-menu a.active {
            background: rgba(199, 161, 122, 0.1);
            color: var(--accent);
            border-left: 3px solid var(--accent);
        }
        
        .sidebar-menu i {
            margin-right: 15px;
            font-size: 18px;
            width: 24px;
            text-align: center;
        }
        
        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 30px;
        }
        
        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 30px;
        }
        
        .admin-header h1 {
            font-size: 28px;
            font-weight: 500;
        }
        
        .logout-btn {
            background: rgba(199, 161, 122, 0.1);
            color: var(--accent);
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            font-size: 14px;
        }
        
        .logout-btn:hover {
            background: var(--accent);
            color: #000;
        }
        
        .logout-btn i {
            margin-right: 8px;
        }
        
        /* Dashboard Cards */
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .card-header {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .card-icon {
            width: 50px;
            height: 50px;
            background: rgba(199, 161, 122, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            font-size: 20px;
            color: var(--accent);
        }
        
        .card-title {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 5px;
        }
        
        .card-value {
            font-size: 28px;
            font-weight: 600;
            color: var(--accent);
        }
        
        .card-description {
            color: var(--light-text);
            font-size: 14px;
            margin-top: 5px;
        }
        
        /* Form Styles */
        .admin-section {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .section-title {
            font-size: 22px;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--accent);
            display: flex;
            align-items: center;
        }
        
        .section-title i {
            margin-right: 10px;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 10px;
            font-weight: 500;
            font-size: 15px;
        }
        
        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 15px;
            background: var(--secondary);
            border: 1px solid #333;
            border-radius: 5px;
            font-size: 15px;
            transition: var(--transition);
            color: var(--text);
        }
        
        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            border-color: var(--accent);
            outline: none;
            box-shadow: 0 0 0 2px rgba(199, 161, 122, 0.2);
        }
        
        textarea {
            min-height: 150px;
            resize: vertical;
        }
        
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-row .form-group {
            flex: 1;
            margin-bottom: 0;
        }
        
        /* Buttons */
        .btn {
            display: inline-block;
            padding: 12px 30px;
            background: var(--accent);
            color: #000;
            text-decoration: none;
            border-radius: 5px;
            font-weight: 600;
            font-size: 15px;
            transition: var(--transition);
            border: none;
            cursor: pointer;
        }
        
        .btn:hover {
            background: #d4b28a;
            transform: translateY(-2px);
        }
        
        .btn-outline {
            background: transparent;
            border: 1px solid var(--accent);
            color: var(--accent);
        }
        
        .btn-outline:hover {
            background: rgba(199, 161, 122, 0.1);
        }
        
        .btn-danger {
            background: var(--danger);
            color: white;
        }
        
        .btn-danger:hover {
            background: #c0392b;
        }
        
        .btn-success {
            background: var(--success);
            color: white;
        }
        
        .btn-success:hover {
            background: #27ae60;
        }
        
        .btn-sm {
            padding: 8px 15px;
            font-size: 14px;
        }
        
        /* Project Cards */
        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .project-card {
            background: var(--secondary);
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #333;
            transition: var(--transition);
        }
        
        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        }
        
        .project-img {
            height: 200px;
            background-size: cover;
            background-position: center;
        }
        
        .project-content {
            padding: 20px;
        }
        
        .project-category {
            display: inline-block;
            background: rgba(199, 161, 122, 0.1);
            color: var(--accent);
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            margin-bottom: 15px;
        }
        
        .project-title {
            font-size: 18px;
            margin-bottom: 10px;
        }
        
        .project-desc {
            color: var(--light-text);
            font-size: 14px;
            margin-bottom: 15px;
            min-height: 60px;
        }
        
        .project-actions {
            display: flex;
            gap: 10px;
        }
        
        /* Experience List */
        .experience-list {
            margin-top: 20px;
        }
        
        .experience-item {
            background: var(--secondary);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            border: 1px solid #333;
        }
        
        .experience-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .experience-date {
            background: rgba(199, 161, 122, 0.1);
            color: var(--accent);
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 14px;
        }
        
        .experience-title {
            font-size: 18px;
            margin-bottom: 5px;
        }
        
        .experience-subtitle {
            color: var(--light-text);
            font-size: 15px;
            margin-bottom: 15px;
        }
        
        .experience-desc ul {
            padding-left: 20px;
            margin-bottom: 15px;
        }
        
        .experience-desc li {
            margin-bottom: 8px;
            color: var(--light-text);
            font-size: 14px;
        }
        
        .experience-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }
        
        /* Preview Section */
        .preview-section {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            max-height: 600px;
            overflow-y: auto;
        }
        
        .preview-title {
            font-size: 22px;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--accent);
            display: flex;
            align-items: center;
        }
        
        .preview-title i {
            margin-right: 10px;
        }
        
        .preview-content {
            font-size: 15px;
            line-height: 1.8;
        }
        
        .preview-content img {
            max-width: 100%;
            border-radius: 10px;
            margin: 15px 0;
        }
        
        /* Responsive Design */
        @media (max-width: 992px) {
            .sidebar {
                width: 70px;
            }
            
            .sidebar .menu-text, .admin-logo p, .admin-logo h2 span {
                display: none;
            }
            
            .admin-logo h2 {
                font-size: 20px;
            }
            
            .sidebar-menu a {
                justify-content: center;
                padding: 15px;
            }
            
            .sidebar-menu i {
                margin-right: 0;
            }
            
            .main-content {
                margin-left: 70px;
            }
        }
        
        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 15px;
            }
            
            .dashboard-cards {
                grid-template-columns: 1fr;
            }
            
            .projects-grid {
                grid-template-columns: 1fr;
            }
        }
        
        /* Login Page */
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            width: 100%;
            background: var(--primary);
        }
        
        .login-box {
            width: 100%;
            max-width: 450px;
            background: var(--card-bg);
            border-radius: 10px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .login-logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .login-logo h2 {
            font-size: 28px;
            color: var(--accent);
            margin-bottom: 10px;
        }
        
        .login-logo p {
            color: var(--light-text);
        }
        
        .login-form .form-group {
            margin-bottom: 20px;
        }
        
        .login-form .btn {
            width: 100%;
            padding: 15px;
            font-size: 16px;
            margin-top: 10px;
        }
        
        /* Notification */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: 5px;
            color: white;
            background: var(--success);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transform: translateX(150%);
            transition: transform 0.3s ease;
            z-index: 1000;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.error {
            background: var(--danger);
        }
    </style>
</head>
<body>
    <!-- Notification -->
    <div class="notification" id="notification"></div>
    
    <!-- Admin Login Page -->
    <div id="loginPage" class="login-container">
        <div class="login-box">
            <div class="login-logo">
                <h2>Christopher Nehme</h2>
                <p>Portfolio Admin Panel</p>
            </div>
            <form class="login-form" id="loginForm">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" placeholder="Enter your username" required>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" placeholder="Enter your password" required>
                </div>
                <button type="submit" class="btn">Sign In</button>
                <p style="text-align: center; margin-top: 20px; color: var(--light-text); font-size: 14px;">
                    Default: admin / password123
                </p>
            </form>
        </div>
    </div>

    <!-- Admin Dashboard -->
    <div id="dashboard" style="display: none; width: 100%;">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="admin-logo">
                <h2>Christopher<span>.</span> Admin</h2>
                <p>Portfolio Management</p>
            </div>
            <ul class="sidebar-menu">
                <li><a href="#" class="active" data-section="dashboard-section"><i class="fas fa-tachometer-alt"></i> <span class="menu-text">Dashboard</span></a></li>
                <li><a href="#" data-section="projects-section"><i class="fas fa-image"></i> <span class="menu-text">Projects</span></a></li>
                <li><a href="#" data-section="experience-section"><i class="fas fa-briefcase"></i> <span class="menu-text">Experience</span></a></li>
                <li><a href="#" data-section="preview-section"><i class="fas fa-eye"></i> <span class="menu-text">Preview</span></a></li>
                <li><a href="#" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> <span class="menu-text">Logout</span></a></li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="admin-header">
                <h1>Portfolio Dashboard</h1>
                <button class="logout-btn" id="logoutBtnTop"><i class="fas fa-sign-out-alt"></i> Logout</button>
            </div>

            <!-- Dashboard Section -->
            <div id="dashboard-section" class="admin-section">
                <h2 class="section-title"><i class="fas fa-tachometer-alt"></i> Dashboard Overview</h2>
                
                <div class="dashboard-cards">
                    <div class="card">
                        <div class="card-header">
                            <div class="card-icon">
                                <i class="fas fa-image"></i>
                            </div>
                            <div>
                                <div class="card-title">Projects</div>
                                <div class="card-value" id="projectsCount">6</div>
                            </div>
                        </div>
                        <p class="card-description">Total portfolio projects</p>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <div class="card-icon">
                                <i class="fas fa-briefcase"></i>
                            </div>
                            <div>
                                <div class="card-title">Experience Items</div>
                                <div class="card-value" id="experienceCount">5</div>
                            </div>
                        </div>
                        <p class="card-description">Work & education entries</p>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <div class="card-icon">
                                <i class="fas fa-tools"></i>
                            </div>
                            <div>
                                <div class="card-title">Last Updated</div>
                                <div class="card-value" id="lastUpdated">Today</div>
                            </div>
                        </div>
                        <p class="card-description">Portfolio changes</p>
                    </div>
                </div>
                
                <div class="card">
                    <h3>Quick Actions</h3>
                    <div class="form-row" style="margin-top: 20px;">
                        <button class="btn" id="addProjectBtn"><i class="fas fa-plus"></i> Add Project</button>
                        <button class="btn" id="addExperienceBtn"><i class="fas fa-plus"></i> Add Experience</button>
                        <button class="btn btn-outline" id="saveAllBtn"><i class="fas fa-save"></i> Save All Changes</button>
                    </div>
                </div>
            </div>

            <!-- Projects Section -->
            <div id="projects-section" class="admin-section" style="display: none;">
                <h2 class="section-title"><i class="fas fa-image"></i> Manage Projects</h2>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="project-title">Project Title</label>
                        <input type="text" id="project-title" placeholder="Enter project title">
                    </div>
                    <div class="form-group">
                        <label for="project-category">Category</label>
                        <select id="project-category">
                            <option value="Brand Identity">Brand Identity</option>
                            <option value="Packaging">Packaging</option>
                            <option value="Editorial">Editorial</option>
                            <option value="Web Design">Web Design</option>
                            <option value="Motion Graphics">Motion Graphics</option>
                            <option value="Typography">Typography</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="project-description">Description</label>
                    <textarea id="project-description" placeholder="Enter project description"></textarea>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="project-image">Image URL</label>
                        <input type="text" id="project-image" placeholder="Enter image URL">
                    </div>
                    <div class="form-group">
                        <label>Preview</label>
                        <div style="background: var(--secondary); height: 150px; border-radius: 5px; display: flex; align-items: center; justify-content: center;">
                            <img src="" id="project-image-preview" style="max-height: 140px; max-width: 100%; display: none;">
                            <p id="no-image-text" style="color: var(--light-text);">No image selected</p>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <button class="btn btn-success" id="saveProjectBtn"><i class="fas fa-save"></i> Save Project</button>
                    <button class="btn btn-danger" id="cancelProjectBtn" style="display: none;"><i class="fas fa-times"></i> Cancel</button>
                    <button class="btn" id="newProjectBtn"><i class="fas fa-file"></i> New Project</button>
                </div>
                
                <input type="hidden" id="current-project-id">
                
                <h3 style="margin: 30px 0 15px; font-size: 18px;">Existing Projects</h3>
                <div class="projects-grid" id="projects-container">
                    <!-- Projects will be loaded here -->
                </div>
            </div>

            <!-- Experience Section -->
            <div id="experience-section" class="admin-section" style="display: none;">
                <h2 class="section-title"><i class="fas fa-briefcase"></i> Manage Experience</h2>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="exp-title">Title</label>
                        <input type="text" id="exp-title" placeholder="e.g., Graphic Designer">
                    </div>
                    <div class="form-group">
                        <label for="exp-subtitle">Subtitle / Company</label>
                        <input type="text" id="exp-subtitle" placeholder="e.g., Creative Studio Inc.">
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="exp-date">Date</label>
                        <input type="text" id="exp-date" placeholder="e.g., January 2023 - Present">
                    </div>
                    <div class="form-group">
                        <label for="exp-type">Type</label>
                        <select id="exp-type">
                            <option value="work">Work Experience</option>
                            <option value="education">Education</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="exp-description">Description (one item per line)</label>
                    <textarea id="exp-description" placeholder="Enter each description item on a new line"></textarea>
                </div>
                
                <div class="form-row">
                    <button class="btn btn-success" id="saveExperienceBtn"><i class="fas fa-save"></i> Save Experience</button>
                    <button class="btn btn-danger" id="cancelExperienceBtn" style="display: none;"><i class="fas fa-times"></i> Cancel</button>
                    <button class="btn" id="newExperienceBtn"><i class="fas fa-file"></i> New Experience</button>
                </div>
                
                <input type="hidden" id="current-experience-id">
                
                <h3 style="margin: 30px 0 15px; font-size: 18px;">Existing Experience</h3>
                <div class="experience-list" id="experience-container">
                    <!-- Experience items will be loaded here -->
                </div>
            </div>

            <!-- Preview Section -->
            <div id="preview-section" class="admin-section" style="display: none;">
                <h2 class="section-title"><i class="fas fa-eye"></i> Content Preview</h2>
                
                <div class="preview-section">
                    <h3 class="preview-title"><i class="fas fa-image"></i> Projects Preview</h3>
                    <div class="preview-content" id="projects-preview">
                        <!-- Projects preview will be loaded here -->
                    </div>
                </div>
                
                <div class="preview-section">
                    <h3 class="preview-title"><i class="fas fa-briefcase"></i> Experience Preview</h3>
                    <div class="preview-content" id="experience-preview">
                        <!-- Experience preview will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Sample data structure
        const portfolioData = {
            projects: [
                {
                    id: 1,
                    title: "Luxury Fashion Brand",
                    category: "Brand Identity",
                    description: "Complete brand identity including logo, color scheme, and visual guidelines",
                    image: "https://images.unsplash.com/photo-1491897554428-130a60dd4757?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80"
                },
                {
                    id: 2,
                    title: "Organic Skincare Line",
                    category: "Packaging",
                    description: "Eco-friendly packaging design with custom illustrations",
                    image: "https://images.unsplash.com/photo-1588200908342-23b585c03e26?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80"
                },
                {
                    id: 3,
                    title: "Art & Culture Magazine",
                    category: "Editorial",
                    description: "Editorial design for quarterly publication",
                    image: "https://images.unsplash.com/photo-1522542550221-31fd19575a2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80"
                }
            ],
            experience: [
                {
                    id: 1,
                    date: "September 2024 - Present",
                    title: "Amazon Product Listing Manager",
                    subtitle: "Remote Position",
                    description: [
                        "Optimized listings to boost Amazon sales",
                        "Implemented SEO strategies for product rankings",
                        "Managed descriptions, images, and pricing",
                        "Monitored performance via Amazon Seller Central",
                        "Developed Amazon-focused promotions",
                        "Ensured compliance with Amazon policies"
                    ],
                    type: "work"
                },
                {
                    id: 2,
                    date: "October 2021 - January 2023",
                    title: "Freelance Graphic Designer",
                    subtitle: "Independent Contractor",
                    description: [
                        "Designed posters, brochures, and social media content",
                        "Created motion graphics for university students",
                        "Delivered high-quality work on tight deadlines",
                        "Used Adobe Creative Suite extensively (Photoshop, Illustrator, InDesign, After Effects)",
                        "Collaborated with clients to meet their vision",
                        "Managed multiple projects simultaneously"
                    ],
                    type: "work"
                },
                {
                    id: 3,
                    date: "2021 - 2024",
                    title: "Bachelor in Graphic Design",
                    subtitle: "Graduated in 2024",
                    description: [
                        "American University of Science & Technology"
                    ],
                    type: "education"
                }
            ]
        };

        // DOM Elements
        const loginPage = document.getElementById('loginPage');
        const dashboard = document.getElementById('dashboard');
        const loginForm = document.getElementById('loginForm');
        const logoutBtn = document.getElementById('logoutBtn');
        const logoutBtnTop = document.getElementById('logoutBtnTop');
        const menuLinks = document.querySelectorAll('.sidebar-menu a');
        const sections = document.querySelectorAll('.admin-section');
        const projectsCount = document.getElementById('projectsCount');
        const experienceCount = document.getElementById('experienceCount');
        const lastUpdated = document.getElementById('lastUpdated');
        const saveAllBtn = document.getElementById('saveAllBtn');
        const addProjectBtn = document.getElementById('addProjectBtn');
        const addExperienceBtn = document.getElementById('addExperienceBtn');
        const projectsContainer = document.getElementById('projects-container');
        const experienceContainer = document.getElementById('experience-container');
        const projectsPreview = document.getElementById('projects-preview');
        const experiencePreview = document.getElementById('experience-preview');
        const notification = document.getElementById('notification');

        // Project form elements
        const projectTitle = document.getElementById('project-title');
        const projectCategory = document.getElementById('project-category');
        const projectDescription = document.getElementById('project-description');
        const projectImage = document.getElementById('project-image');
        const projectImagePreview = document.getElementById('project-image-preview');
        const noImageText = document.getElementById('no-image-text');
        const saveProjectBtn = document.getElementById('saveProjectBtn');
        const cancelProjectBtn = document.getElementById('cancelProjectBtn');
        const newProjectBtn = document.getElementById('newProjectBtn');
        const currentProjectId = document.getElementById('current-project-id');

        // Experience form elements
        const expTitle = document.getElementById('exp-title');
        const expSubtitle = document.getElementById('exp-subtitle');
        const expDate = document.getElementById('exp-date');
        const expType = document.getElementById('exp-type');
        const expDescription = document.getElementById('exp-description');
        const saveExperienceBtn = document.getElementById('saveExperienceBtn');
        const cancelExperienceBtn = document.getElementById('cancelExperienceBtn');
        const newExperienceBtn = document.getElementById('newExperienceBtn');
        const currentExperienceId = document.getElementById('current-experience-id');

        // Initialize
        let currentData = {...portfolioData};
        let editingProject = null;
        let editingExperience = null;

        // Show notification
        function showNotification(message, isError = false) {
            notification.textContent = message;
            notification.className = 'notification';
            notification.classList.add(isError ? 'error' : 'success');
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        // Login Functionality
        loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            // Simple authentication
            if (username === 'admin' && password === 'password123') {
                loginPage.style.display = 'none';
                dashboard.style.display = 'block';
                loadData();
                showNotification('Login successful!');
            } else {
                showNotification('Invalid credentials. Try admin / password123', true);
            }
        });

        // Logout Functionality
        logoutBtn.addEventListener('click', logout);
        logoutBtnTop.addEventListener('click', logout);

        function logout() {
            loginPage.style.display = 'flex';
            dashboard.style.display = 'none';
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
            showNotification('You have been logged out');
        }

        // Menu Navigation
        menuLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Handle logout separately
                if (this.id === 'logoutBtn') return;
                
                // Update active menu item
                menuLinks.forEach(l => l.classList.remove('active'));
                this.classList.add('active');
                
                // Show the selected section
                const sectionId = this.getAttribute('data-section');
                sections.forEach(section => {
                    section.style.display = 'none';
                });
                document.getElementById(sectionId).style.display = 'block';
            });
        });

        // Load data from localStorage or use sample data
        function loadData() {
            const savedData = localStorage.getItem('portfolioData');
            if (savedData) {
                currentData = JSON.parse(savedData);
            }
            
            updateCounts();
            renderProjects();
            renderExperience();
            renderPreviews();
        }

        // Update dashboard counts
        function updateCounts() {
            projectsCount.textContent = currentData.projects.length;
            experienceCount.textContent = currentData.experience.length;
            lastUpdated.textContent = new Date().toLocaleDateString();
        }

        // Render projects list
        function renderProjects() {
            projectsContainer.innerHTML = '';
            
            currentData.projects.forEach(project => {
                const projectCard = document.createElement('div');
                projectCard.className = 'project-card';
                projectCard.innerHTML = `
                    <div class="project-img" style="background-image: url('${project.image}')"></div>
                    <div class="project-content">
                        <span class="project-category">${project.category}</span>
                        <h4 class="project-title">${project.title}</h4>
                        <p class="project-desc">${project.description}</p>
                        <div class="project-actions">
                            <button class="btn btn-sm edit-project" data-id="${project.id}">Edit</button>
                            <button class="btn btn-sm btn-danger delete-project" data-id="${project.id}">Delete</button>
                        </div>
                    </div>
                `;
                projectsContainer.appendChild(projectCard);
            });
            
            // Add event listeners
            document.querySelectorAll('.edit-project').forEach(btn => {
                btn.addEventListener('click', () => editProject(btn.dataset.id));
            });
            
            document.querySelectorAll('.delete-project').forEach(btn => {
                btn.addEventListener('click', () => deleteProject(btn.dataset.id));
            });
        }

        // Render experience list
        function renderExperience() {
            experienceContainer.innerHTML = '';
            
            currentData.experience.forEach(exp => {
                const expItem = document.createElement('div');
                expItem.className = 'experience-item';
                expItem.innerHTML = `
                    <div class="experience-header">
                        <span class="experience-date">${exp.date}</span>
                        <span class="experience-type">${exp.type === 'work' ? 'Work' : 'Education'}</span>
                    </div>
                    <h4 class="experience-title">${exp.title}</h4>
                    <p class="experience-subtitle">${exp.subtitle}</p>
                    <div class="experience-desc">
                        <ul>
                            ${exp.description.map(item => `<li>${item}</li>`).join('')}
                        </ul>
                    </div>
                    <div class="experience-actions">
                        <button class="btn btn-sm edit-experience" data-id="${exp.id}">Edit</button>
                        <button class="btn btn-sm btn-danger delete-experience" data-id="${exp.id}">Delete</button>
                    </div>
                `;
                experienceContainer.appendChild(expItem);
            });
            
            // Add event listeners
            document.querySelectorAll('.edit-experience').forEach(btn => {
                btn.addEventListener('click', () => editExperience(btn.dataset.id));
            });
            
            document.querySelectorAll('.delete-experience').forEach(btn => {
                btn.addEventListener('click', () => deleteExperience(btn.dataset.id));
            });
        }

        // Render previews
        function renderPreviews() {
            // Projects preview
            projectsPreview.innerHTML = `
                <h4>Portfolio Projects</h4>
                <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 20px; margin-top: 20px;">
                    ${currentData.projects.map(project => `
                        <div style="background: var(--secondary); border-radius: 10px; overflow: hidden;">
                            <img src="${project.image}" alt="${project.title}" style="width: 100%; height: 150px; object-fit: cover;">
                            <div style="padding: 15px;">
                                <span style="display: inline-block; background: rgba(199, 161, 122, 0.1); color: var(--accent); padding: 3px 10px; border-radius: 20px; font-size: 12px; margin-bottom: 10px;">${project.category}</span>
                                <h5 style="margin-bottom: 5px;">${project.title}</h5>
                                <p style="font-size: 14px; color: var(--light-text);">${project.description}</p>
                            </div>
                        </div>
                    `).join('')}
                </div>
            `;
            
            // Experience preview
            experiencePreview.innerHTML = `
                <h4>Work Experience & Education</h4>
                <div style="margin-top: 20px;">
                    ${currentData.experience.map(exp => `
                        <div style="background: var(--secondary); padding: 20px; border-radius: 10px; margin-bottom: 15px;">
                            <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                                <span style="background: rgba(199, 161, 122, 0.1); color: var(--accent); padding: 3px 10px; border-radius: 20px; font-size: 14px;">${exp.date}</span>
                                <span style="font-size: 14px; color: var(--light-text);">${exp.type === 'work' ? 'Work' : 'Education'}</span>
                            </div>
                            <h5>${exp.title}</h5>
                            <p style="color: var(--light-text); margin-bottom: 10px;">${exp.subtitle}</p>
                            <ul style="padding-left: 20px;">
                                ${exp.description.map(item => `<li style="font-size: 14px; margin-bottom: 5px; color: var(--light-text);">${item}</li>`).join('')}
                            </ul>
                        </div>
                    `).join('')}
                </div>
            `;
        }

        // Project CRUD operations
        function editProject(id) {
            const project = currentData.projects.find(p => p.id == id);
            if (!project) return;
            
            projectTitle.value = project.title;
            projectCategory.value = project.category;
            projectDescription.value = project.description;
            projectImage.value = project.image;
            
            if (project.image) {
                projectImagePreview.src = project.image;
                projectImagePreview.style.display = 'block';
                noImageText.style.display = 'none';
            } else {
                projectImagePreview.style.display = 'none';
                noImageText.style.display = 'block';
            }
            
            currentProjectId.value = id;
            saveProjectBtn.textContent = 'Update Project';
            cancelProjectBtn.style.display = 'inline-block';
            editingProject = project;
            
            // Scroll to form
            document.getElementById('projects-section').scrollIntoView({ behavior: 'smooth' });
            
            showNotification('Editing project: ' + project.title);
        }

        function saveProject() {
            const title = projectTitle.value.trim();
            const category = projectCategory.value;
            const description = projectDescription.value.trim();
            const image = projectImage.value.trim();
            const id = currentProjectId.value;
            
            if (!title || !description || !image) {
                showNotification('Please fill in all fields', true);
                return;
            }
            
            if (id) {
                // Update existing project
                const index = currentData.projects.findIndex(p => p.id == id);
                if (index !== -1) {
                    currentData.projects[index] = {
                        ...currentData.projects[index],
                        title,
                        category,
                        description,
                        image
                    };
                    showNotification('Project updated successfully!');
                }
            } else {
                // Create new project
                const newId = Math.max(...currentData.projects.map(p => p.id), 0) + 1;
                currentData.projects.push({
                    id: newId,
                    title,
                    category,
                    description,
                    image
                });
                showNotification('Project created successfully!');
            }
            
            resetProjectForm();
            renderProjects();
            renderPreviews();
            updateCounts();
            saveData();
        }

        function deleteProject(id) {
            const project = currentData.projects.find(p => p.id == id);
            if (!project) return;
            
            if (!confirm('Are you sure you want to delete this project?')) return;
            
            currentData.projects = currentData.projects.filter(p => p.id != id);
            renderProjects();
            renderPreviews();
            updateCounts();
            saveData();
            showNotification('Project deleted: ' + project.title);
        }

        function resetProjectForm() {
            projectTitle.value = '';
            projectCategory.value = 'Brand Identity';
            projectDescription.value = '';
            projectImage.value = '';
            projectImagePreview.style.display = 'none';
            noImageText.style.display = 'block';
            currentProjectId.value = '';
            saveProjectBtn.textContent = 'Save Project';
            cancelProjectBtn.style.display = 'none';
            editingProject = null;
        }

        // Experience CRUD operations
        function editExperience(id) {
            const exp = currentData.experience.find(e => e.id == id);
            if (!exp) return;
            
            expTitle.value = exp.title;
            expSubtitle.value = exp.subtitle;
            expDate.value = exp.date;
            expType.value = exp.type;
            expDescription.value = exp.description.join('\n');
            
            currentExperienceId.value = id;
            saveExperienceBtn.textContent = 'Update Experience';
            cancelExperienceBtn.style.display = 'inline-block';
            editingExperience = exp;
            
            // Scroll to form
            document.getElementById('experience-section').scrollIntoView({ behavior: 'smooth' });
            
            showNotification('Editing experience: ' + exp.title);
        }

        function saveExperience() {
            const title = expTitle.value.trim();
            const subtitle = expSubtitle.value.trim();
            const date = expDate.value.trim();
            const type = expType.value;
            const description = expDescription.value.trim().split('\n').filter(line => line.trim());
            const id = currentExperienceId.value;
            
            if (!title || !subtitle || !date || description.length === 0) {
                showNotification('Please fill in all fields', true);
                return;
            }
            
            if (id) {
                // Update existing experience
                const index = currentData.experience.findIndex(e => e.id == id);
                if (index !== -1) {
                    currentData.experience[index] = {
                        ...currentData.experience[index],
                        title,
                        subtitle,
                        date,
                        type,
                        description
                    };
                    showNotification('Experience updated successfully!');
                }
            } else {
                // Create new experience
                const newId = Math.max(...currentData.experience.map(e => e.id), 0) + 1;
                currentData.experience.push({
                    id: newId,
                    title,
                    subtitle,
                    date,
                    type,
                    description
                });
                showNotification('Experience created successfully!');
            }
            
            resetExperienceForm();
            renderExperience();
            renderPreviews();
            updateCounts();
            saveData();
        }

        function deleteExperience(id) {
            const exp = currentData.experience.find(e => e.id == id);
            if (!exp) return;
            
            if (!confirm('Are you sure you want to delete this experience?')) return;
            
            currentData.experience = currentData.experience.filter(e => e.id != id);
            renderExperience();
            renderPreviews();
            updateCounts();
            saveData();
            showNotification('Experience deleted: ' + exp.title);
        }

        function resetExperienceForm() {
            expTitle.value = '';
            expSubtitle.value = '';
            expDate.value = '';
            expType.value = 'work';
            expDescription.value = '';
            currentExperienceId.value = '';
            saveExperienceBtn.textContent = 'Save Experience';
            cancelExperienceBtn.style.display = 'none';
            editingExperience = null;
        }

        // Image preview
        projectImage.addEventListener('input', function() {
            if (this.value) {
                projectImagePreview.src = this.value;
                projectImagePreview.style.display = 'block';
                noImageText.style.display = 'none';
            } else {
                projectImagePreview.style.display = 'none';
                noImageText.style.display = 'block';
            }
        });

        // Save data to localStorage
        function saveData() {
            localStorage.setItem('portfolioData', JSON.stringify(currentData));
            showNotification('All changes saved successfully!');
        }

        // Event Listeners
        saveProjectBtn.addEventListener('click', saveProject);
        cancelProjectBtn.addEventListener('click', resetProjectForm);
        newProjectBtn.addEventListener('click', resetProjectForm);
        addProjectBtn.addEventListener('click', function() {
            document.querySelector('[data-section="projects-section"]').click();
            resetProjectForm();
        });
        
        saveExperienceBtn.addEventListener('click', saveExperience);
        cancelExperienceBtn.addEventListener('click', resetExperienceForm);
        newExperienceBtn.addEventListener('click', resetExperienceForm);
        addExperienceBtn.addEventListener('click', function() {
            document.querySelector('[data-section="experience-section"]').click();
            resetExperienceForm();
        });
        
        saveAllBtn.addEventListener('click', saveData);
        
        // Initialize the application
        window.addEventListener('DOMContentLoaded', function() {
            // Set the last updated date
            lastUpdated.textContent = new Date().toLocaleDateString();
            
            // Show a welcome message on first load
            if (!localStorage.getItem('portfolioData')) {
                setTimeout(() => {
                    showNotification('Welcome! Use admin/password123 to login');
                }, 1000);
            }
        });
    </script>
</body>
</html>
